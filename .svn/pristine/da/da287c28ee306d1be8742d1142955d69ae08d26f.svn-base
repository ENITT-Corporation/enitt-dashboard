package kr.co.enitt.poscoWebSystem.interceptor;

import java.util.Optional;

import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;
import javax.servlet.http.HttpSession;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Component;
import org.springframework.web.servlet.ModelAndView;
import org.springframework.web.servlet.ModelAndViewDefiningException;
import org.springframework.web.servlet.handler.HandlerInterceptorAdapter;

import kr.co.enitt.poscoWebSystem.service.MenuService;
import kr.co.enitt.poscoWebSystem.util.ObjectUtil;
import kr.co.enitt.poscoWebSystem.util.SessionScopeUtil;
import kr.co.enitt.poscoWebSystem.util.WebUtil;
import kr.co.enitt.poscoWebSystem.vo.MenuVO;
import kr.co.enitt.poscoWebSystem.vo.UserVO;


@Component
public class AuthInterceptor extends HandlerInterceptorAdapter {
	@Autowired 
	MenuService menuService;
	
	@Override
	public boolean preHandle(HttpServletRequest request, HttpServletResponse response, Object handler) throws Exception {
		
		Object sessionLoginVo = SessionScopeUtil.getAttribute("UserVO");
		UserVO userVO = (UserVO) Optional.ofNullable(sessionLoginVo).orElse(new UserVO());
		
		String loginId = ObjectUtil.toString(userVO.getId(),"");
		String loginAuth = ObjectUtil.toString(userVO.getAuth(),"");
		
		if(request.getRequestURI().equals("/")) {
			ModelAndView mav = new ModelAndView("redirect:/login"); 
			throw new ModelAndViewDefiningException(mav);
		}
		
		//로그인이 안되어 있을경우
		if(ObjectUtil.isEmpty(loginId)) {
			ModelAndView mav = new ModelAndView("redirect:/login"); 
			mav.addObject("message", "로그인 후 사용 가능한 메뉴 입니다.");
			throw new ModelAndViewDefiningException(mav);
		}
		
//		//비밀번호 변경 여부 확인
//		if("N".equals(loginPasswordChangeYn)) {
//			ModelAndView mav = new ModelAndView("redirect:/mypage/passwordChange"); 
//			mav.addObject("message", "로그인 후 사용 가능한 메뉴 입니다.");
//			throw new ModelAndViewDefiningException(mav);
//		}
		
//		String[] url = WebUtil.getUri(request).split("/"); 
//		MenuVO vo = new MenuVO();
//		
//		vo.setMenuTitle(url[1]);
//		MenuVO 	menuVO = menuService.getMenu(vo);
		

		return true;
	}
	
}